#!/usr/bin/env node

// -*- mode: javascript -*-

// activitypump
//
// entry point activity pump application
//
// Copyright 2011-2012, StatusNet Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

var cluster = require("cluster"),
    os = require("os"),
    fs = require("fs"),
    path = require("path"),
    _ = require("underscore"),
    makeApp = require("../lib/app").makeApp;

// Gets the configuration vars for this server from config files

var getConfig = function() {
    var files = ['/etc/activitypump.json',
                 path.join(process.env.HOME, ".activitypump.json")],
        config = {},
        i,
        raw,
        parsed;

    // This is all sync
    for (i = 0; i < files.length; i++) {
        if (fs.existsSync(files[i])) {
            raw = fs.readFileSync(files[i]);
            try {
                parsed = JSON.parse(raw);
                _.extend(config, parsed);
            } catch (err) {
                console.log(err);
                process.exit(1);
            }
        }
    }

    return config;
};

var launchApps = function(config) {
    var cnt, i;

    if (cluster.isMaster) {
        cnt = config.children || Math.max(os.cpus().length - 1, 1);
        for (i = 0; i < cnt; i++) {
            cluster.fork();
        }
    } else { 
        makeApp(config, function(err, app) {
            if (err) {
                console.log(err);
            } else {
                app.run(function(err) {});
            }
        });
    }
};

var main = function() {
    var config = getConfig();
    launchApps(config);
};

main();
